# Paul Sastrasinh

# C/C++ Build variables
CC  = ndk-build
SRCDIR := jni
OBJDIR := obj


# Java build variables
JAVA_CLASSDIR := bin/classes/
JAVA_SOURCES := $(wildcard $(src/pocky/libs/*.class))
JAVA_CLASSES := $(wildcard $(JAVA_CLASSDIR)pocky/libs/*.class)
JAVA_HEADERS := $(subst /,_, $(subst $(JAVA_CLASSDIR), '', $(JAVA_CLASSES:.class=.h)))
JNI_CLASSES := $(subst $(JAVA_CLASSDIR), '', $(JAVA_CLASSES:.class=))
# Build
all : pocky
pineapple:
	make -C ../pineapple all
headergen : #generate jni headers
	@ \
	echo '\nCreating JNI Headers'; \
	echo $(JAVA_HEADERS); \
	cd bin/classes/; \
	javah -jni -d ../../jni/include $(subst /,., $(JNI_CLASSES)) 
androidmk : #generate the android.mk file
	@ \
	echo '\nGenerating Android.mk'; \
	echo '#WARNING THIS Android.mk IS AUTOGENERATED (DO NOT MODIFY)\n\nLOCAL_PATH:= $$(call my-dir)\n' \
	'include $$(CLEAR_VARS)\n'\
	'LOCAL_MODULE    := pocky\n'\
	'LOCAL_CFLAGS    := -Werror -I../\n'\
	'LOCAL_SRC_FILES :=$(subst jni/, '', $(wildcard $(SRCDIR)/src/*.cpp))\n'\
	'LOCAL_LDLIBS    := -llog -lGLESv2  -L../pineapple -lpineapple\n'\
	'include $$(BUILD_SHARED_LIBRARY)' > $(SRCDIR)/Android.mk
pocky : pineapple headergen androidmk #compile
	@ \
	echo '\nCompiling'; \
	echo '$(CC) $(wildcard $(SRCDIR)/src/*.cpp)\n'; \
	$(CC) -j5
clean:
	@ \
	rm -rf obj/* libs/*;