# Paul Sastrasinh

# C/C++ Build variables
CC  = ndk-build
SRCDIR := jni
OBJDIR := obj


# Java build variables
JAVA_CLASSDIR := bin/classes/
JAVA_SOURCES := $(wildcard $(src/pocky/libs/*.class))
JAVA_CLASSES := $(wildcard $(JAVA_CLASSDIR)pineapple/libs/*.class)
JAVA_HEADERS := $(subst /,_, $(subst $(JAVA_CLASSDIR), '', $(JAVA_CLASSES:.class=.h)))
JNI_CLASSES := $(subst $(JAVA_CLASSDIR), '', $(JAVA_CLASSES:.class=))
# Build
all : pineapple
headergen : #generate jni headers
	@ \
	echo '\nCreating JNI Headers'; \
	echo $(JAVA_HEADERS); \
	cd bin/classes/; \
	javah -jni -d ../../jni/include $(subst /,., $(JNI_CLASSES))
androidmk : #generate the android.mk file
	@ \
	echo '\nGenerating Android.mk';\
	echo '#WARNING THIS Android.mk IS AUTOGENERATED (DO NOT MODIFY)\n\nLOCAL_PATH:= $$(call my-dir)\n'\
	'include $$(CLEAR_VARS)\n'\
	'LOCAL_C_INCLUDES := $$(LOCAL_PATH)/../libzip/\n'\
	'LOCAL_STATIC_LIBRARIES := libzip \n'\
	'LOCAL_MODULE    := pineapple \n'\
	'LOCAL_SRC_FILES :=$(subst jni/src/, '', $(wildcard $(SRCDIR)/src/*.cpp))\n'\
	'LOCAL_LDLIBS    := -llog -lGLESv2 -ldl -lz\n'\
	'include $$(BUILD_SHARED_LIBRARY)' > $(SRCDIR)/src/Android.mk	
pineapple : headergen androidmk#compile
	@ \
	echo '\nCompiling'; \
	echo '$(CC) $(wildcard $(SRCDIR)/src/*.cpp)\n'; \
	$(CC) -j5
clean:
	@ \
	rm -rf obj/* libs/*;